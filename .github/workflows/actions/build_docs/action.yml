name: Build Docs
description: Build the documentation
inputs:
  os:
    description: 'Operating system'
    required: true
    default: 'ubuntu-latest'

runs:
  using: 'composite'

  steps:
    - name: Get current week number of year
      id: date
      run: echo "date=$(date +%Y-W%W)" >> $GITHUB_OUTPUT  # e.g., 2024-W19
      shell: bash

    # Install Micromamba with conda-forge dependencies
    - name: Setup Micromamba
      uses: mamba-org/setup-micromamba@v2.0.4
      with:
        environment-name: pygmt
        cache-environment: true
        # environment cache is persistent for one week.
        cache-environment-key: micromamba-environment-${{ steps.date.outputs.date }}
        create-args: >-
          python=3.13
          gmt=6.5.0
          ghostscript=10.04.0
          numpy
          pandas
          xarray
          netCDF4
          packaging
          contextily
          geopandas
          ipython
          pyarrow-core
          rioxarray
          make
          pip
          python-build
          geodatasets
          myst-nb
          panel
          sphinx>=6.2
          sphinx-autodoc-typehints
          sphinx-copybutton
          sphinx-design
          sphinx-gallery
          sphinx_rtd_theme
          cairosvg
          sphinxcontrib-svg2pdfconverter
          tectonic

    # Download cached remote files (artifacts) from GitHub
    - name: Download remote data from GitHub
      run: |
        # Download cached files to ~/.gmt directory and list them
        gh run download --name gmt-cache --dir ~/.gmt/
        # Change modification times of the two files, so GMT won't refresh it
        touch ~/.gmt/gmt_data_server.txt ~/.gmt/gmt_hash_server.txt
        ls -lhR ~/.gmt
      shell: bash -l {0}
      env:
        GH_TOKEN: ${{ github.token }}

    # Install the package that we want to test
    - name: Install the package
      run: |
        python -m build --sdist
        python -m pip install dist/*
      shell: bash -l {0}

    - name: Build the HTML documentation
      run: make -C doc clean html
      shell: bash -l {0}

    - name: Build the PDF documentation
      run:  make -C doc pdf
      shell: bash -l {0}
