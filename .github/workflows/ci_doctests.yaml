# Run all doctests on Linux/macOS/Windows
#
# This workflow runs all PyGMT doctests. It is scheduled to run weekly every
# Sunday.
#
name: Doctests

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  workflow_dispatch:
  # Schedule weekly tests on Sunday
  schedule:
    - cron: '0 0 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  test:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: github.repository == 'GenericMappingTools/pygmt'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    timeout-minutes: 30
    defaults:
      run:
        shell: bash -l {0}

    steps:
      # Checkout current git repository
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          # fetch all history so that setuptools-scm works
          fetch-depth: 0

      # Install Micromamba with conda-forge dependencies
      - name: Setup Micromamba
        uses: mamba-org/setup-micromamba@v2.0.3
        with:
          environment-name: pygmt
          condarc: |
            channels:
              - conda-forge
              - nodefaults
          create-args: >-
            python=3.13
            gmt=6.5.0
            numpy
            pandas
            xarray
            netCDF4
            packaging
            contextily
            geopandas
            ipython
            pyarrow-core
            rioxarray
            make
            pip
            python-build
            pytest
            pytest-doctestplus
            pytest-mpl

      # Download cached remote files (artifacts) from GitHub
      - name: Download remote data from GitHub
        run: |
          # Download cached files to ~/.gmt directory and list them
          gh run download --name gmt-cache --dir ~/.gmt/
          # Change modification times of the two files, so GMT won't refresh it
          touch ~/.gmt/gmt_data_server.txt ~/.gmt/gmt_hash_server.txt
          ls -lhR ~/.gmt
        env:
          GH_TOKEN: ${{ github.token }}

      # Install the package that we want to test
      - name: Install the package
        run: make install

      # Run the doctests
      - name: Run doctests
        run: make doctest PYTEST_EXTRA="-r P"
