
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/images/grdgradient.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_images_grdgradient.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_images_grdgradient.py:


Calculating grid gradient and radiance
--------------------------------------
The :func:`pygmt.grdgradient` function calculates the gradient of a grid file.
In the example shown below we will see how to calculate a hillshade map based
on a Data Elevation Model (DEM). As input :func:`pygmt.grdgradient` gets
a :class:`xarray.DataArray` object or a path string to a grid file, calculates
the respective gradient and returns it as an :class:`xarray.DataArray` object.
We will use the ``radiance`` parameter in order to set the illumination source
direction and altitude.

.. GENERATED FROM PYTHON SOURCE LINES 12-55



.. image-sg:: /gallery/images/images/sphx_glr_grdgradient_001.png
   :alt: grdgradient
   :srcset: /gallery/images/images/sphx_glr_grdgradient_001.png
   :class: sphx-glr-single-img





.. code-block:: default


    import pygmt

    # Define region of interest around Yosemite valley
    region = [-119.825, -119.4, 37.6, 37.825]

    # Load sample grid (3 arc-seconds global relief) in target area
    grid = pygmt.datasets.load_earth_relief(resolution="03s", region=region)

    # calculate the reflection of a light source projecting from west to east
    # (azimuth of 270 degrees) and at a latitude of 30 degrees from the horizon
    dgrid = pygmt.grdgradient(grid=grid, radiance=[270, 30])

    fig = pygmt.Figure()
    # define figure configuration
    pygmt.config(FORMAT_GEO_MAP="ddd.x", MAP_FRAME_TYPE="plain")

    # --------------- plotting the original Data Elevation Model -----------

    pygmt.makecpt(cmap="gray", series=[200, 4000, 10])
    fig.grdimage(
        grid=grid,
        projection="M12c",
        frame=["WSrt+tOriginal Data Elevation Model", "xa0.1", "ya0.1"],
        cmap=True,
    )

    fig.colorbar(position="JML+o1.4c/0c+w7c/0.5c", frame=["xa1000f500+lElevation", "y+lm"])

    # --------------- plotting the hillshade map -----------

    # Shift plot origin of the second map by 12.5 cm in x direction
    fig.shift_origin(xshift="12.5c")

    pygmt.makecpt(cmap="gray", series=[-1.5, 0.3, 0.01])
    fig.grdimage(
        grid=dgrid,
        projection="M12c",
        frame=["lSEt+tHillshade Map", "xa0.1", "ya0.1"],
        cmap=True,
    )

    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.432 seconds)


.. _sphx_glr_download_gallery_images_grdgradient.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: grdgradient.py <grdgradient.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: grdgradient.ipynb <grdgradient.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
