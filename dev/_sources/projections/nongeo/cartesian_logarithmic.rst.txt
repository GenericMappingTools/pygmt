
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "projections/nongeo/cartesian_logarithmic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_projections_nongeo_cartesian_logarithmic.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_projections_nongeo_cartesian_logarithmic.py:


Cartesian logarithmic
=====================

**X**\ *width*\ [**l**]/[*height*\ [**l**]]: Give the *width* of the figure and
the optional *height*. The axis or axes with a logarithmic transformation
requires **l** after its size argument.

.. GENERATED FROM PYTHON SOURCE LINES 9-39



.. image:: /projections/nongeo/images/sphx_glr_cartesian_logarithmic_001.png
    :alt: cartesian logarithmic
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <IPython.core.display.Image object>






|

.. code-block:: default

    import numpy as np
    import pygmt

    # Create a list of x values 0-100
    xline = np.arange(0, 101)
    # Create a list of y-values that are the square root of the x-values
    yline = xline ** 0.5
    # Create a list of x values for every 10 in 0-100
    xpoints = np.arange(0, 101, 10)
    # Create a list of y-values that are the square root of the x-values
    ypoints = xpoints ** 0.5

    fig = pygmt.Figure()
    fig.plot(
        region=[1, 100, 0, 10],
        # Set a logarithmic transformation on the x-axis
        projection="X15cl/10c",
        # Set the figures frame, color, and gridlines
        frame=["WSne+gbisque", "x2g3", "ya2f1g2"],
        x=xline,
        y=yline,
        # Set the line thickness to *1p*, the color to *blue*, and the style to
        # *dash*
        pen="1p,blue,-",
    )
    # Plot square root values as points on the line
    # Style of points is 0.3 cm square, color is *red* with a *black* outline
    # Points are not clipped if they go off the figure
    fig.plot(x=xpoints, y=ypoints, style="s0.3c", color="red", no_clip=True, pen="black")
    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.229 seconds)


.. _sphx_glr_download_projections_nongeo_cartesian_logarithmic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: cartesian_logarithmic.py <cartesian_logarithmic.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: cartesian_logarithmic.ipynb <cartesian_logarithmic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
