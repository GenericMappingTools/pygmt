
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "projections/nongeo/cartesian_logarithmic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_projections_nongeo_cartesian_logarithmic.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_projections_nongeo_cartesian_logarithmic.py:


Cartesian logarithmic
=====================

**X**\ *width*\ [**l**][/*height*\ [**l**]] or
**x**\ *x-scale*\ [**l**][/*y-scale*\ [**l**]]

Give the *width* of the plot and the optional *height*. The lowercase version **x** is
similar to **X** but expects an *x-scale* and an optional *y-scale*. Each axis with a
logarithmic transformation requires an **l** after its size argument.

.. GENERATED FROM PYTHON SOURCE LINES 14-43



.. image-sg:: /projections/nongeo/images/sphx_glr_cartesian_logarithmic_001.png
   :alt: cartesian logarithmic
   :srcset: /projections/nongeo/images/sphx_glr_cartesian_logarithmic_001.png
   :class: sphx-glr-single-img





.. code-block:: Python

    import numpy as np
    import pygmt

    # Create a list of x-values 0-100
    xline = np.arange(0, 101)
    # Create a list of y-values that are the square root of the x-values
    yline = xline**0.5
    # Create a list of x-values for every 10 in 0-100
    xpoints = np.arange(0, 101, 10)
    # Create a list of y-values that are the square root of the x-values
    ypoints = xpoints**0.5

    fig = pygmt.Figure()
    fig.basemap(
        region=[1, 100, 0, 10],
        # Set a logarithmic transformation on the x-axis
        projection="X15cl/10c",
        # Set the figure's frame and color as well as annotations, ticks, and gridlines
        frame=["WSne+gbisque", "xa2g3", "ya2f1g2"],
    )

    # Set the line thickness to "2p", the color to "black", and the style to "dashed"
    fig.plot(x=xline, y=yline, pen="2p,black,dashed")

    # Plot the square root values on top of the line
    # Use squares with a size of 0.3 centimeters, an "orange" fill and a "black" outline
    # Symbols are not clipped if they go off the figure
    fig.plot(x=xpoints, y=ypoints, style="s0.3c", fill="orange", pen="black", no_clip=True)
    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.153 seconds)


.. _sphx_glr_download_projections_nongeo_cartesian_logarithmic.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: cartesian_logarithmic.ipynb <cartesian_logarithmic.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: cartesian_logarithmic.py <cartesian_logarithmic.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: cartesian_logarithmic.zip <cartesian_logarithmic.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
