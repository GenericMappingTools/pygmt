
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "projections/nongeo/cartesian_power.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_projections_nongeo_cartesian_power.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_projections_nongeo_cartesian_power.py:


Cartesian power
===============

**X**\ *width*\ [**p**\ *pvalue*]/[*height*\ [**p**\ *pvalue*]]: Give the
*width* of the figure and the optional argument *height*. The axis or axes with
a logarithmic transformation requires **p** and the power transformation for
that axis.

.. GENERATED FROM PYTHON SOURCE LINES 10-36



.. image-sg:: /projections/nongeo/images/sphx_glr_cartesian_power_001.png
   :alt: cartesian power
   :srcset: /projections/nongeo/images/sphx_glr_cartesian_power_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <IPython.core.display.Image object>






|

.. code-block:: default

    import numpy as np
    import pygmt

    # Create a list of y values 0-10
    yvalues = np.arange(0, 11)
    # Create a list of x-values that are the square of the y-values
    xvalues = yvalues**2

    fig = pygmt.Figure()
    fig.plot(
        region=[0, 100, 0, 10],
        # Set the power transformation of the x-axis, with a power of 0.5
        projection="X15cp0.5/10c",
        # Set the figures frame, color, and gridlines
        frame=["WSne+givory", "xa1p", "ya2f1"],
        # Set the line thickness to *thick*
        # Use the default color *black* and the default style *solid*
        pen="thick",
        x=xvalues,
        y=yvalues,
    )
    # Plot x,y values as points on the line
    # Style of points is 0.2 cm circles, color is *green* with a *black* outline
    # Points are not clipped if they go off the figure
    fig.plot(x=xvalues, y=yvalues, style="c0.2c", color="green", no_clip=True, pen="black")
    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.220 seconds)


.. _sphx_glr_download_projections_nongeo_cartesian_power.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: cartesian_power.py <cartesian_power.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: cartesian_power.ipynb <cartesian_power.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
