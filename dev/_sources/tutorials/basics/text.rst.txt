
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/basics/text.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_basics_text.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_basics_text.py:


Plotting text
=============

It is often useful to add annotations to a plot. This is handled by
:meth:`pygmt.Figure.text`.

.. GENERATED FROM PYTHON SOURCE LINES 10-14

.. code-block:: Python

    import os

    import pygmt








.. GENERATED FROM PYTHON SOURCE LINES 15-25

Basic map annotation
--------------------

Text annotations can be added to a map using the :meth:`pygmt.Figure.text`
method of the :class:`pygmt.Figure` class.

Here we create a simple map and add an annotation using the ``text``, ``x``,
and ``y`` parameters to specify the annotation text and position in the
projection frame. ``text`` accepts *str* types, while ``x`` and ``y``
accept either *int* or *float* numbers, or a list/array of numbers.

.. GENERATED FROM PYTHON SOURCE LINES 25-40

.. code-block:: Python


    fig = pygmt.Figure()
    with pygmt.config(MAP_FRAME_TYPE="plain"):
        fig.basemap(region=[108, 120, -5, 8], projection="M20c", frame="a")
    fig.coast(land="black", water="skyblue")

    # Plot text annotations using single arguments
    fig.text(text="SOUTH CHINA SEA", x=112, y=6)

    # Plot text annotations using lists of arguments
    fig.text(text=["CELEBES SEA", "JAVA SEA"], x=[119, 112], y=[3.25, -4.6])

    fig.show()





.. image-sg:: /tutorials/basics/images/sphx_glr_text_001.png
   :alt: text
   :srcset: /tutorials/basics/images/sphx_glr_text_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 41-50

Changing font style
-------------------

The size, family/weight, and color of an annotation can be specified using
the ``font`` parameter.

A list of all recognized fonts can be found at
:gmt-docs:`PostScript Fonts Used by GMT <reference/postscript-fonts.html>`,
including details of how to use non-default fonts.

.. GENERATED FROM PYTHON SOURCE LINES 50-62

.. code-block:: Python


    fig = pygmt.Figure()
    with pygmt.config(MAP_FRAME_TYPE="plain"):
        fig.basemap(region=[108, 120, -5, 8], projection="M20c", frame="a")
    fig.coast(land="black", water="skyblue")

    # Customize the font style
    fig.text(text="BORNEO", x=114.0, y=0.5, font="22p,Helvetica-Bold,white")

    fig.show()





.. image-sg:: /tutorials/basics/images/sphx_glr_text_002.png
   :alt: text
   :srcset: /tutorials/basics/images/sphx_glr_text_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 63-68

Plotting from a text file
-------------------------

It is also possible to add annotations from a file containing ``x``, ``y``,
and ``text`` columns. Here we give a complete example.

.. GENERATED FROM PYTHON SOURCE LINES 68-96

.. code-block:: Python


    fig = pygmt.Figure()
    with pygmt.config(MAP_FRAME_TYPE="plain"):
        fig.basemap(region=[108, 120, -5, 8], projection="M20c", frame="a")
    fig.coast(land="black", water="skyblue")

    # Create space-delimited file
    with open("examples.txt", "w") as f:
        f.write("114 0.5 0 22p,Helvetica-Bold,white CM BORNEO\n")
        f.write("119 3.25 0 12p,Helvetica-Bold,black CM CELEBES SEA\n")
        f.write("112 -4.6 0 12p,Helvetica-Bold,black CM JAVA SEA\n")
        f.write("112 6 40 12p,Helvetica-Bold,black CM SOUTH CHINA SEA\n")
        f.write("119.12 7.25 -40 12p,Helvetica-Bold,black CM SULU SEA\n")
        f.write("118.4 -1 65 12p,Helvetica-Bold,black CM MAKASSAR STRAIT\n")

    # Plot region names / sea names from a text file, where
    # the longitude (x) and latitude (y) coordinates are in the first two columns.
    # Setting angle/font/justify to True will indicate that those columns are
    # present in the text file too (Note: must be in that order!).
    # Finally, the text to be printed will be in the last column
    fig.text(textfiles="examples.txt", angle=True, font=True, justify=True)

    # Cleanups
    os.remove("examples.txt")

    fig.show()





.. image-sg:: /tutorials/basics/images/sphx_glr_text_003.png
   :alt: text
   :srcset: /tutorials/basics/images/sphx_glr_text_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 97-109

``justify`` parameter
---------------------

``justify`` is used to define the anchor point for the bounding box for text
being added to a plot. The following code segment demonstrates the
positioning of the anchor point relative to the text.

The anchor point is specified with a two-letter (order independent) code,
chosen from:

* Vertical anchor: **T**\(op), **M**\(iddle), **B**\(ottom)
* Horizontal anchor: **L**\(eft), **C**\(entre), **R**\(ight)

.. GENERATED FROM PYTHON SOURCE LINES 109-122

.. code-block:: Python


    fig = pygmt.Figure()
    fig.basemap(region=[0, 3, 0, 3], projection="X10c", frame=["WSne", "af0.5g"])
    for position in ("TL", "TC", "TR", "ML", "MC", "MR", "BL", "BC", "BR"):
        fig.text(
            text=position,
            position=position,
            font="28p,Helvetica-Bold,black",
            justify=position,
        )
    fig.show()





.. image-sg:: /tutorials/basics/images/sphx_glr_text_004.png
   :alt: text
   :srcset: /tutorials/basics/images/sphx_glr_text_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 123-128

``angle`` parameter
-------------------

``angle`` is an optional parameter used to specify the counter-clockwise
rotation in degrees of the text from the horizontal.

.. GENERATED FROM PYTHON SOURCE LINES 128-136

.. code-block:: Python


    fig = pygmt.Figure()
    fig.basemap(region=[0, 4, 0, 4], projection="X5c", frame="WSen")
    for i in range(0, 360, 30):
        fig.text(text=f"`          {i}@.", x=2, y=2, justify="LM", angle=i)
    fig.show()





.. image-sg:: /tutorials/basics/images/sphx_glr_text_005.png
   :alt: text
   :srcset: /tutorials/basics/images/sphx_glr_text_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 137-141

``fill`` parameter
------------------

``fill`` is used to set the fill color of the area surrounding the text.

.. GENERATED FROM PYTHON SOURCE LINES 141-148

.. code-block:: Python


    fig = pygmt.Figure()
    fig.basemap(region=[0, 1, 0, 1], projection="X5c", frame="WSen")
    fig.text(text="Green", x=0.5, y=0.5, fill="green")
    fig.show()





.. image-sg:: /tutorials/basics/images/sphx_glr_text_006.png
   :alt: text
   :srcset: /tutorials/basics/images/sphx_glr_text_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 149-156

Advanced configuration
----------------------

For crafting more advanced styles, including using special symbols and
other character sets, be sure to check out the GMT documentation
at :gmt-docs:`text.html` and also the GMT Technical Reference at
:gmt-docs:`reference/features.html#placement-of-text`. Good luck!


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.459 seconds)


.. _sphx_glr_download_tutorials_basics_text.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: text.ipynb <text.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: text.py <text.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
