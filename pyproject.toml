[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pygmt"
description = "A Python interface for the Generic Mapping Tools"
readme = "README.rst"
requires-python = ">=3.9"
license = {text = "BSD License"}
authors = [{name = "The PyGMT Developers", email = "pygmt.team@gmail.com"}]
keywords = [
    "cartography",
    "geodesy",
    "geology",
    "geophysics",
    "geospatial",
    "oceanography",
    "seismology",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: BSD License",
]
dependencies = [
    "numpy>=1.22",
    "pandas",
    "xarray",
    "netCDF4",
    "packaging",
]
dynamic = ["version"]

[project.optional-dependencies]
all = [
    "contextily",
    "geopandas",
    "ipython",
    "rioxarray",
]

[project.urls]
homepage = "https://www.pygmt.org"
documentation = "https://www.pygmt.org"
repository = "https://github.com/GenericMappingTools/pygmt"
changelog = "https://www.pygmt.org/latest/changes.html"

[tool.setuptools]
platforms = ["Any"]
include-package-data = true

[tool.setuptools.packages.find]
include = ["pygmt*"]
exclude = ["doc"]

[tool.setuptools.package-data]
tests = ["data/*", "baseline/*"]

[tool.setuptools_scm]
local_scheme = "node-and-date"
fallback_version = "999.999.999+unknown"

[tool.blackdoc]
line-length = 79

[tool.codespell]
ignore-words-list = "astroid,oints,reenable,tripel,trough"

[tool.coverage.run]
omit = ["*/tests/*", "*pygmt/__init__.py"]

[tool.docformatter]
black = true
recursive = true
pre-summary-newline = true
make-summary-multi-line = true
wrap-summaries = 79
wrap-descriptions = 79

[tool.mypy]
exclude = ["pygmt/tests/"]
ignore_missing_imports = true

[tool.ruff]
line-length = 88  # E501 (line-too-long)
show-source = true

[tool.ruff.format]
line-ending = "lf"  # Use UNIX `\n` line endings for all files

[tool.ruff.lint]
select = [
    "B",    # flake8-bugbear
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "NPY",  # numpy
    "PD",   # pandas-vet
    "PL",   # pylint
    "SIM",  # flake8-simplify
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
]
ignore = [
    "E501", # Avoid enforcing line-length violations
    "PD901",  # Allow using the generic variable name `df` for DataFrames
    "PLR2004",  # Allow any magic values
    "SIM117",  # Allow nested `with` statements
]

[tool.ruff.lint.isort]
known-third-party = ["pygmt"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore `F401` (unused-import) in all `__init__.py` files

[tool.ruff.lint.pycodestyle]
max-doc-length = 79

[tool.ruff.lint.pylint]
max-args=10

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--verbose --durations=0 --durations-min=0.2 --doctest-modules --mpl --mpl-results-path=results"
