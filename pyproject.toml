[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pygmt"
description = "A Python interface for the Generic Mapping Tools"
readme = "README.rst"
requires-python = ">=3.8"
license = {text = "BSD License"}
authors = [{name = "The PyGMT Developers", email = "pygmt.team@gmail.com"}]
keywords = []
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: BSD License",
]
dependencies = [
    "numpy>=1.20",
    "pandas",
    "xarray",
    "netCDF4",
    "packaging"
]
dynamic = ["version"]

[project.optional-dependencies]
all = [
    "geopandas",
    "ipython"
]

[project.urls]
homepage = "https://www.pygmt.org"
documentation = "https://www.pygmt.org"
repository = "https://github.com/GenericMappingTools/pygmt"
changelog = "https://www.pygmt.org/latest/changes.html"

[tool.setuptools]
platforms = ["Any"]
include-package-data = true

[tool.setuptools.packages.find]
include = ["pygmt*"]
exclude = ["doc"]

[tool.setuptools.package-data]
tests = ["data/*", "baseline/*"]

[tool.setuptools_scm]
local_scheme = "node-and-date"
fallback_version = "999.999.999+unknown"

[tool.blackdoc]
line-length = 79

[tool.coverage.run]
omit = ["*/tests/*", "*pygmt/__init__.py"]

[tool.docformatter]
recursive = true
pre-summary-newline = true
make-summary-multi-line = true
wrap-summaries = 79
wrap-descriptions = 79

[tool.flakeheaven]
max_line_length = 88
max_doc_length = 79
show_source = true

[tool.flakeheaven.plugins]
pycodestyle = ["+*", "-E501", "-W503"]
pyflakes = ["+*"]

[tool.flakeheaven.exceptions."**/__init__.py"]
pyflakes = ["-F401"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--verbose --durations=0 --durations-min=0.2 --doctest-modules --mpl --mpl-results-path=results"

[tool.isort]
profile = "black"
skip_gitignore = true
known_third_party = "pygmt"

[tool.pylint.MASTER]
# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the
# number of processors available to use.
jobs=0

[tool.pylint.BASIC]
# Good variable names which should always be accepted, separated by a comma.
good-names="i,j,k,ex,Run,_,w,e,s,n,x,y,z"

[tool.pylint.DESIGN]
# Maximum number of arguments for function / method.
max-args=10

[tool.pylint.FORMAT]
# Maximum number of lines in a module.
max-module-lines=2000

[tool.pylint.'MESSAGE CONTROL']
# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once). You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use "--disable=all --enable=classes
# --disable=W".
disable=["duplicate-code", "import-error"]
