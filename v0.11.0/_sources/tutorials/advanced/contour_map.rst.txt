
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/advanced/contour_map.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_advanced_contour_map.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_advanced_contour_map.py:


Creating a map with contour lines
=================================

Plotting a contour map is handled by :meth:`pygmt.Figure.grdcontour`.

.. GENERATED FROM PYTHON SOURCE LINES 9-15

.. code-block:: Python

    import pygmt

    # Load sample earth relief data
    grid = pygmt.datasets.load_earth_relief(resolution="05m", region=[-92.5, -82.5, -3, 7])









.. GENERATED FROM PYTHON SOURCE LINES 16-26

Create contour plot
-------------------

The :meth:`pygmt.Figure.grdcontour` method takes the grid input.
It plots annotated contour lines, which are thicker and have the
elevation/depth written on them, and unannotated contour lines.
In the example below, the default contour line intervals are 500 meters,
with an annotated contour line every 1,000 meters.
By default, it plots the map with the
equidistant cylindrical projection and with no frame.

.. GENERATED FROM PYTHON SOURCE LINES 26-32

.. code-block:: Python


    fig = pygmt.Figure()
    fig.grdcontour(grid=grid)
    fig.show()





.. image-sg:: /tutorials/advanced/images/sphx_glr_contour_map_001.png
   :alt: contour map
   :srcset: /tutorials/advanced/images/sphx_glr_contour_map_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 33-39

Contour line settings
---------------------

Use the ``annotation`` and ``interval`` parameters to adjust contour line
intervals. In the example below, there are contour intervals every 250 meters
and annotated contour lines every 1,000 meters.

.. GENERATED FROM PYTHON SOURCE LINES 39-49

.. code-block:: Python


    fig = pygmt.Figure()
    fig.grdcontour(
        annotation=1000,
        interval=250,
        grid=grid,
    )
    fig.show()





.. image-sg:: /tutorials/advanced/images/sphx_glr_contour_map_002.png
   :alt: contour map
   :srcset: /tutorials/advanced/images/sphx_glr_contour_map_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 50-56

Contour limits
--------------

The ``limit`` parameter sets the minimum and maximum values for the contour
lines. The parameter takes the low and high values, and is either a list (as
below) or a string ``limit="-4000/-2000"``.

.. GENERATED FROM PYTHON SOURCE LINES 56-67

.. code-block:: Python


    fig = pygmt.Figure()
    fig.grdcontour(
        annotation=1000,
        interval=250,
        grid=grid,
        limit=[-4000, -2000],
    )
    fig.show()





.. image-sg:: /tutorials/advanced/images/sphx_glr_contour_map_003.png
   :alt: contour map
   :srcset: /tutorials/advanced/images/sphx_glr_contour_map_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 68-73

Map settings
------------

The :meth:`pygmt.Figure.grdcontour` method accepts additional parameters,
including setting the projection and frame.

.. GENERATED FROM PYTHON SOURCE LINES 73-86

.. code-block:: Python


    fig = pygmt.Figure()
    fig.grdcontour(
        annotation=1000,
        interval=250,
        grid=grid,
        limit=[-4000, -2000],
        projection="M10c",
        frame=True,
    )
    fig.show()





.. image-sg:: /tutorials/advanced/images/sphx_glr_contour_map_004.png
   :alt: contour map
   :srcset: /tutorials/advanced/images/sphx_glr_contour_map_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 87-97

Adding a colormap
-----------------

The :meth:`pygmt.Figure.grdimage` method can be used to add a
colormap to the contour map. It must be called prior to
:meth:`pygmt.Figure.grdcontour` to keep the contour lines visible on the
final map. If the ``projection`` parameter is specified in the
:meth:`pygmt.Figure.grdimage` method, it does not need to be repeated in the
:meth:`pygmt.Figure.grdcontour` method. Finally, a colorbar is added using
the :meth:`pygmt.Figure.colorbar` method.

.. GENERATED FROM PYTHON SOURCE LINES 97-114

.. code-block:: Python


    fig = pygmt.Figure()
    fig.grdimage(
        grid=grid,
        cmap="haxby",
        projection="M10c",
        frame=True,
    )
    fig.grdcontour(
        annotation=1000,
        interval=250,
        grid=grid,
        limit=[-4000, -2000],
    )
    fig.colorbar(frame=["x+lelevation", "y+lm"])
    fig.show()




.. image-sg:: /tutorials/advanced/images/sphx_glr_contour_map_005.png
   :alt: contour map
   :srcset: /tutorials/advanced/images/sphx_glr_contour_map_005.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.454 seconds)


.. _sphx_glr_download_tutorials_advanced_contour_map.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: contour_map.ipynb <contour_map.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: contour_map.py <contour_map.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
