
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/advanced/3d_perspective_image.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_advanced_3d_perspective_image.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_advanced_3d_perspective_image.py:


Creating a 3-D perspective image
================================

Create 3-D perspective image or surface mesh from a grid
using :meth:`pygmt.Figure.grdview`.

.. GENERATED FROM PYTHON SOURCE LINES 10-15

.. code-block:: Python

    import pygmt

    # Load sample earth relief data
    grid = pygmt.datasets.load_earth_relief(resolution="10m", region=[-108, -103, 35, 40])








.. GENERATED FROM PYTHON SOURCE LINES 16-23

The :meth:`pygmt.Figure.grdview` method takes the ``grid`` input.
The ``perspective`` parameter changes the azimuth and elevation of the
viewpoint; the default is [180, 90], which is looking directly down on the
figure and north is "up". The ``zsize`` parameter sets how tall the
three-dimensional portion appears.

The default grid surface type is *mesh plot*.

.. GENERATED FROM PYTHON SOURCE LINES 23-40

.. code-block:: Python


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        # Sets the view azimuth as 130 degrees, and the view elevation as 30
        # degrees
        perspective=[130, 30],
        # Sets the x- and y-axis labels, and annotates the west, south, and east
        # axes
        frame=["xa", "ya", "WSnE"],
        # Sets a Mercator projection on a 15-centimeter figure
        projection="M15c",
        # Sets the height of the three-dimensional relief at 1.5 centimeters
        zsize="1.5c",
    )
    fig.show()




.. image-sg:: /tutorials/advanced/images/sphx_glr_3d_perspective_image_001.png
   :alt: 3d perspective image
   :srcset: /tutorials/advanced/images/sphx_glr_3d_perspective_image_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 41-43

The grid surface type can be set with the ``surftype`` parameter.
The default CPT is *turbo* and can be customized with the ``cmap`` parameter.

.. GENERATED FROM PYTHON SOURCE LINES 43-58

.. code-block:: Python


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        perspective=[130, 30],
        frame=["xa", "yaf", "WSnE"],
        projection="M15c",
        zsize="1.5c",
        # Set the surftype to "surface"
        surftype="s",
        # Set the CPT to "geo"
        cmap="geo",
    )
    fig.show()




.. image-sg:: /tutorials/advanced/images/sphx_glr_3d_perspective_image_002.png
   :alt: 3d perspective image
   :srcset: /tutorials/advanced/images/sphx_glr_3d_perspective_image_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 59-61

The ``plane`` parameter sets the elevation and color of a plane that provides
a fill below the surface relief.

.. GENERATED FROM PYTHON SOURCE LINES 61-76

.. code-block:: Python


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        perspective=[130, 30],
        frame=["xa", "yaf", "WSnE"],
        projection="M15c",
        zsize="1.5c",
        surftype="s",
        cmap="geo",
        # Set the plane elevation to 1,000 meters and make the fill "gray"
        plane="1000+ggray",
    )
    fig.show()




.. image-sg:: /tutorials/advanced/images/sphx_glr_3d_perspective_image_003.png
   :alt: 3d perspective image
   :srcset: /tutorials/advanced/images/sphx_glr_3d_perspective_image_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 77-83

The ``perspective`` azimuth can be changed to set the direction that is "up"
in the figure. The ``contourpen`` parameter sets the pen used to draw contour
lines on the surface. :meth:`pygmt.Figure.colorbar` can be used to add a
color bar to the figure. The ``cmap`` parameter does not need to be passed
again. To keep the color bar's alignment similar to the figure, use ``True``
as argument for the ``perspective`` parameter.

.. GENERATED FROM PYTHON SOURCE LINES 83-101

.. code-block:: Python


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        # Set the azimuth to -130 (230) degrees and the elevation to 30 degrees
        perspective=[-130, 30],
        frame=["xaf", "yaf", "WSnE"],
        projection="M15c",
        zsize="1.5c",
        surftype="s",
        cmap="geo",
        plane="1000+ggrey",
        # Set the contour pen thickness to "0.1p"
        contourpen="0.1p",
    )
    fig.colorbar(perspective=True, frame=["a500", "x+lElevation", "y+lm"])
    fig.show()




.. image-sg:: /tutorials/advanced/images/sphx_glr_3d_perspective_image_004.png
   :alt: 3d perspective image
   :srcset: /tutorials/advanced/images/sphx_glr_3d_perspective_image_004.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.957 seconds)


.. _sphx_glr_download_tutorials_advanced_3d_perspective_image.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 3d_perspective_image.ipynb <3d_perspective_image.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 3d_perspective_image.py <3d_perspective_image.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 3d_perspective_image.zip <3d_perspective_image.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
