
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/images/grdclip.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_images_grdclip.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_images_grdclip.py:


Clipping grid values
====================

The :func:`pygmt.grdclip` function allows to clip defined ranges of grid
values. In the example shown below we set all elevation values (grid points)
smaller than 0 m (in general the bathymetric part of the grid) to a common
value of -2000 m via the ``below`` parameter.

.. GENERATED FROM PYTHON SOURCE LINES 12-47



.. image-sg:: /gallery/images/images/sphx_glr_grdclip_001.png
   :alt: grdclip
   :srcset: /gallery/images/images/sphx_glr_grdclip_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    grdblend [NOTICE]: Remote data courtesy of GMT data server oceania [http://oceania.generic-mapping-tools.org]
    grdblend [NOTICE]: SRTM15 Earth Relief v2.6 at 03x03 arc minutes reduced by Gaussian Cartesian filtering (15.7 km fullwidth) [Tozer et al., 2019].
    grdblend [NOTICE]:   -> Download 90x90 degree grid tile (earth_relief_03m_g): N00W090






|

.. code-block:: Python

    import pygmt

    fig = pygmt.Figure()

    # Define region of interest around Iceland
    region = [-28, -10, 62, 68]

    # Load sample grid (3 arc-minutes global relief) in target area
    grid = pygmt.datasets.load_earth_relief(resolution="03m", region=region)

    # Plot original grid
    fig.basemap(
        region=region,
        projection="M12c",
        frame=["WSne+toriginal grid", "xa5f1", "ya2f1"],
    )
    fig.grdimage(grid=grid, cmap="oleron")

    # Shift plot origin of the second map by "width of the first map + 0.5 cm"
    # in x direction
    fig.shift_origin(xshift="w+0.5c")

    # Set all grid points < 0 m to a value of -2000 m.
    grid = pygmt.grdclip(grid, below=[0, -2000])

    # Plot clipped grid
    fig.basemap(
        region=region,
        projection="M12c",
        frame=["wSne+tclipped grid", "xa5f1", "ya2f1"],
    )
    fig.grdimage(grid=grid)
    fig.colorbar(frame=["x+lElevation", "y+lm"], position="JMR+o0.5c/0c+w8c")

    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.212 seconds)


.. _sphx_glr_download_gallery_images_grdclip.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: grdclip.ipynb <grdclip.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: grdclip.py <grdclip.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: grdclip.zip <grdclip.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
