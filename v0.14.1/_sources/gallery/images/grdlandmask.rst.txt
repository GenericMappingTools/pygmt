
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/images/grdlandmask.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_images_grdlandmask.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_images_grdlandmask.py:


Create 'wet-dry' mask grid
==========================

The :func:`pygmt.grdlandmask` function allows setting all nodes on land
or water to a specified value using the ``maskvalues`` parameter.

.. GENERATED FROM PYTHON SOURCE LINES 10-37



.. image-sg:: /gallery/images/images/sphx_glr_grdlandmask_001.png
   :alt: grdlandmask
   :srcset: /gallery/images/images/sphx_glr_grdlandmask_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    grdimage [WARNING]: Your CPT is categorical. Enabling -nn+a to avoid interpolation across categories.






|

.. code-block:: Python

    import pygmt

    fig = pygmt.Figure()

    # Define region of interest
    region = [-65, -40, -40, -20]

    # Assign a value of 0 for all water masses and a value of 1 for all land
    # masses.
    # Use shoreline data with (l)ow resolution and set the grid spacing to
    # 5 arc-minutes in x and y direction.
    grid = pygmt.grdlandmask(region=region, spacing="5m", maskvalues=[0, 1], resolution="l")

    # Plot clipped grid
    fig.basemap(region=region, projection="M12c", frame=True)

    # Define a colormap to be used for two categories, define the range of the
    # new discrete CPT using series=(lowest_value, highest_value, interval),
    # use color_model="+cwater,land" to write the discrete color palette
    # "batlow" in categorical format and add water/land as annotations for the
    # colorbar.
    pygmt.makecpt(cmap="batlow", series=(0, 1, 1), color_model="+cwater,land")

    fig.grdimage(grid=grid, cmap=True)
    fig.colorbar(position="JMR+o0.5c/0c+w8c")

    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.185 seconds)


.. _sphx_glr_download_gallery_images_grdlandmask.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: grdlandmask.ipynb <grdlandmask.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: grdlandmask.py <grdlandmask.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: grdlandmask.zip <grdlandmask.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
