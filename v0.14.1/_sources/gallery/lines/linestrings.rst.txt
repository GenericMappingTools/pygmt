
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/lines/linestrings.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_lines_linestrings.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_lines_linestrings.py:


GeoPandas: Plotting lines with LineString or MultiLineString geometry
=====================================================================

The :meth:`pygmt.Figure.plot` method allows us to plot geographical data such as lines
with LineString or MultiLineString geometry types stored in a
:class:`geopandas.GeoDataFrame` object or any object that implements the
`__geo_interface__ <https://gist.github.com/sgillies/2217756>`__ property.

Use :func:`geopandas.read_file` to load data from any supported OGR format such as a
shapefile (.shp), GeoJSON (.geojson), geopackage (.gpkg), etc. Then, pass the
:class:`geopandas.GeoDataFrame` object as an argument to the ``data`` parameter of
:meth:`pygmt.Figure.plot`, and style the lines using the ``pen`` parameter.

.. GENERATED FROM PYTHON SOURCE LINES 17-30

.. code-block:: Python

    import geodatasets
    import geopandas as gpd
    import pygmt

    # Read a sample dataset provided by the geodatasets package.
    # The dataset contains large rivers in Europe, stored as LineString/MultiLineString
    # geometry types.
    gdf = gpd.read_file(geodatasets.get_path("eea large_rivers"))

    # Convert object to EPSG 4326 coordinate system
    gdf = gdf.to_crs("EPSG:4326")
    print(gdf.head())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

               NAME  ...                                           geometry
    0        Danube  ...  MULTILINESTRING ((8.1846 48.0807, 8.19049 48.0...
    1         Douro  ...  MULTILINESTRING ((-8.67141 41.14934, -8.64362 ...
    2          Ebro  ...  MULTILINESTRING ((-4.05971 42.97715, -4.06841 ...
    3          Elbe  ...  MULTILINESTRING ((8.69715 53.90109, 8.72716 53...
    4  Guadalquivir  ...  MULTILINESTRING ((-6.37899 36.80363, -6.34806 ...

    [5 rows x 3 columns]




.. GENERATED FROM PYTHON SOURCE LINES 31-47

.. code-block:: Python

    fig = pygmt.Figure()

    fig.coast(
        projection="M10c",
        region=[-10, 30, 35, 57],
        resolution="l",
        land="gray95",
        shorelines="1/0.1p,gray50",
        borders="1/0.1,gray30",
        frame=True,
    )

    # Add rivers to map
    fig.plot(data=gdf, pen="1p,steelblue")

    fig.show()



.. image-sg:: /gallery/lines/images/sphx_glr_linestrings_001.png
   :alt: linestrings
   :srcset: /gallery/lines/images/sphx_glr_linestrings_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.003 seconds)


.. _sphx_glr_download_gallery_lines_linestrings.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: linestrings.ipynb <linestrings.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: linestrings.py <linestrings.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: linestrings.zip <linestrings.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
