
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/symbols/datetime_inputs.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_symbols_datetime_inputs.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_symbols_datetime_inputs.py:


Datetime inputs
===============

Datetime inputs of the following types are supported in PyGMT:

- :class:`numpy.datetime64`
- :class:`pandas.DatetimeIndex`
- :class:`xarray.DataArray`: datetimes included in an *xarray.DataArray*
- raw datetime strings in
  `ISO 8601 format <https://en.wikipedia.org/wiki/ISO_8601>`__ (e.g.
  ``"YYYY-MM-DD"``, ``"YYYY-MM-DDTHH"``, and ``"YYYY-MM-DDTHH:MM:SS"``)
- Python built-in :class:`datetime.datetime` and :class:`datetime.date`

We can pass datetime inputs based on one of the types listed above directly to
the ``x`` and ``y`` parameters of e.g. the :meth:`pygmt.Figure.plot` method.

The ``region`` parameter has to include the :math:`x` and :math:`y` axis limits
in the form [*date_min*, *date_max*, *ymin*, *ymax*]. Here *date_min* and
*date_max* can be directly defined as datetime input.

.. GENERATED FROM PYTHON SOURCE LINES 25-70



.. image-sg:: /gallery/symbols/images/sphx_glr_datetime_inputs_001.png
   :alt: datetime inputs
   :srcset: /gallery/symbols/images/sphx_glr_datetime_inputs_001.png
   :class: sphx-glr-single-img





.. code-block:: Python

    import datetime

    import numpy as np
    import pandas as pd
    import pygmt
    import xarray as xr

    fig = pygmt.Figure()

    # create a basemap with limits of 2010-01-01 to 2020-06-01 on the x axis and
    # 0 to 10 on the y axis
    fig.basemap(
        projection="X15c/5c",
        region=[datetime.date(2010, 1, 1), datetime.date(2020, 6, 1), 0, 10],
        frame=["WSen", "af"],
    )

    # numpy.datetime64 types
    x = np.array(
        ["2010-06-01", "2011-06-01T12", "2012-01-01T12:34:56"], dtype=np.datetime64
    )
    y = [1, 2, 3]
    fig.plot(x=x, y=y, style="c0.4c", pen="1p", fill="red3")

    # pandas.DatetimeIndex
    x = pd.date_range("2013", periods=3, freq="YS")
    y = [4, 5, 6]
    fig.plot(x=x, y=y, style="t0.4c", pen="1p", fill="gold")

    # xarray.DataArray
    x = xr.DataArray(data=pd.date_range(start="2015-03", periods=3, freq="QS"))
    y = [7.5, 6, 4.5]
    fig.plot(x=x, y=y, style="s0.4c", pen="1p")

    # raw datetime strings
    x = ["2016-02-01", "2016-06-04T14", "2016-10-04T00:00:15"]
    y = [7, 8, 9]
    fig.plot(x=x, y=y, style="a0.4c", pen="1p", fill="dodgerblue")

    # the Python built-in datetime and date
    x = [datetime.date(2018, 1, 1), datetime.datetime(2019, 6, 1, 20, 5, 45)]
    y = [6.5, 4.5]
    fig.plot(x=x, y=y, style="i0.4c", pen="1p", fill="seagreen")

    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.129 seconds)


.. _sphx_glr_download_gallery_symbols_datetime_inputs.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: datetime_inputs.ipynb <datetime_inputs.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: datetime_inputs.py <datetime_inputs.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: datetime_inputs.zip <datetime_inputs.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
