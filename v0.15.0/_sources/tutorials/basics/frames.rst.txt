
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/basics/frames.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_basics_frames.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_basics_frames.py:


Frames, ticks, titles, and labels
=================================

Setting frame, ticks, title, etc., of the plot is handled by the ``frame``
parameter that most plotting methods of the :class:`pygmt.Figure` class
contain.

.. GENERATED FROM PYTHON SOURCE LINES 11-13

.. code-block:: Python

    import pygmt








.. GENERATED FROM PYTHON SOURCE LINES 14-19

Plot frame
----------

By default, PyGMT does not add a frame to your plot. For example, we can plot
the coastlines of the world with a Mercator projection:

.. GENERATED FROM PYTHON SOURCE LINES 19-24

.. code-block:: Python


    fig = pygmt.Figure()
    fig.coast(shorelines="1/0.5p", region=[-180, 180, -60, 60], projection="M25c")
    fig.show()




.. image-sg:: /tutorials/basics/images/sphx_glr_frames_001.png
   :alt: frames
   :srcset: /tutorials/basics/images/sphx_glr_frames_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 25-28

To add the default GMT frame style to the plot, use ``frame="f"`` in
:meth:`pygmt.Figure.basemap` or another plotting method (which has the
``frame`` parameter, with the exception of :meth:`pygmt.Figure.colorbar`):

.. GENERATED FROM PYTHON SOURCE LINES 28-35

.. code-block:: Python


    fig = pygmt.Figure()
    fig.coast(shorelines="1/0.5p", region=[-180, 180, -60, 60], projection="M25c")
    fig.basemap(frame="f")
    fig.show()





.. image-sg:: /tutorials/basics/images/sphx_glr_frames_002.png
   :alt: frames
   :srcset: /tutorials/basics/images/sphx_glr_frames_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 36-42

Ticks and grid lines
--------------------

The automatic frame (``frame=True`` or ``frame="af"``) adds the default GMT
frame style and automatically determines tick labels from the plot region.
In GMT the tick labels are called **a**\ nnotations.

.. GENERATED FROM PYTHON SOURCE LINES 42-48

.. code-block:: Python


    fig = pygmt.Figure()
    fig.coast(shorelines="1/0.5p", region=[-180, 180, -60, 60], projection="M25c")
    fig.basemap(frame="af")
    fig.show()




.. image-sg:: /tutorials/basics/images/sphx_glr_frames_003.png
   :alt: frames
   :srcset: /tutorials/basics/images/sphx_glr_frames_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 49-51

Add automatic grid lines to the plot by passing ``g`` through the ``frame``
parameter:

.. GENERATED FROM PYTHON SOURCE LINES 51-57

.. code-block:: Python


    fig = pygmt.Figure()
    fig.coast(shorelines="1/0.5p", region=[-180, 180, -60, 60], projection="M25c")
    fig.basemap(frame="ag")
    fig.show()




.. image-sg:: /tutorials/basics/images/sphx_glr_frames_004.png
   :alt: frames
   :srcset: /tutorials/basics/images/sphx_glr_frames_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 58-61

To adjust the step widths of annotations, frame, and grid lines we can
add the desired step widths after ``a``, ``f``, or ``g``. In the example
below, the step widths are set to 30°, 7.5°, and 15°, respectively.

.. GENERATED FROM PYTHON SOURCE LINES 61-68

.. code-block:: Python


    fig = pygmt.Figure()
    fig.coast(shorelines="1/0.5p", region=[-180, 180, -60, 60], projection="M25c")
    fig.basemap(frame="a30f7.5g15")
    fig.show()





.. image-sg:: /tutorials/basics/images/sphx_glr_frames_005.png
   :alt: frames
   :srcset: /tutorials/basics/images/sphx_glr_frames_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 69-75

Title
-----

The figure title can be set by passing **+t**\ *title* to the ``frame``
parameter of :meth:`pygmt.Figure.basemap`. Passing multiple arguments to
``frame`` can be done by using a list, as shown in the example below.

.. GENERATED FROM PYTHON SOURCE LINES 75-83

.. code-block:: Python


    fig = pygmt.Figure()
    # region="TT" specifies Trinidad and Tobago using the ISO country code
    fig.coast(shorelines="1/0.5p", region="TT", projection="M25c")
    fig.basemap(frame=["a", "+tTrinidad and Tobago"])
    fig.show()





.. image-sg:: /tutorials/basics/images/sphx_glr_frames_006.png
   :alt: frames
   :srcset: /tutorials/basics/images/sphx_glr_frames_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 84-103

Axis labels
-----------

Axis labels, in GMT simply called labels, can be set by passing
**x+l**\ *label* (or starting with **y** if
labeling the y-axis) to the ``frame`` parameter of
:meth:`pygmt.Figure.basemap`. The map boundaries (or plot axes) are named as
West/west/left (**W**, **w**, **l**), South/south/bottom
(**S**, **s**, **b**), North/north/top (**N**, **n**, **t**), and
East/east/right (**E**, **e**, **r**) sides of a figure. If an uppercase
letter (**W**, **S**, **N**, **E**) is passed, the axis is plotted with
tick marks and annotations. The lowercase version
(**w**, **s**, **n**, **e**) plots the axis only with tick marks.
To only plot the axis pass **l**, **b**, **t**, **r**. By default
(``frame=True`` or ``frame="af"``), the West and the South axes are
plotted with both tick marks and annotations.

The example below uses a Cartesian projection, as GMT does not allow
labels to be set for geographic maps.

.. GENERATED FROM PYTHON SOURCE LINES 103-115

.. code-block:: Python


    fig = pygmt.Figure()
    fig.basemap(
        region=[0, 10, 0, 20],
        projection="X10c/8c",
        # Plot axis with tick marks, annotations, and labels on the
        # West and South axes
        # Plot axis with tick marks on the north and east axes
        frame=["WSne", "xaf+lx-axis", "yaf+ly-axis"],
    )
    fig.show()




.. image-sg:: /tutorials/basics/images/sphx_glr_frames_007.png
   :alt: frames
   :srcset: /tutorials/basics/images/sphx_glr_frames_007.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.923 seconds)


.. _sphx_glr_download_tutorials_basics_frames.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: frames.ipynb <frames.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: frames.py <frames.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: frames.zip <frames.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
