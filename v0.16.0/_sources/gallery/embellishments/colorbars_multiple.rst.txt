
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/embellishments/colorbars_multiple.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_embellishments_colorbars_multiple.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_embellishments_colorbars_multiple.py:


Multiple colormaps
==================

This gallery example shows how to create multiple colormaps for different
subplots. To better understand how GMT modern mode maintains several levels of
colormaps, please refer to
:gmt-docs:`reference/features.html#gmt-modern-mode-hierarchical-levels` for
details.

.. GENERATED FROM PYTHON SOURCE LINES 13-46



.. image-sg:: /gallery/embellishments/images/sphx_glr_colorbars_multiple_001.png
   :alt: colorbars multiple
   :srcset: /gallery/embellishments/images/sphx_glr_colorbars_multiple_001.png
   :class: sphx-glr-single-img





.. code-block:: Python

    import pygmt

    fig = pygmt.Figure()

    # Load Earth relief data for the entire globe and a subset region
    grid_globe = pygmt.datasets.load_earth_relief(resolution="01d")
    subset_region = [-14, 30, 35, 60]
    grid_subset = pygmt.datasets.load_earth_relief(resolution="10m", region=subset_region)

    # Define a 1-row, 2-column subplot layout. The overall figure dimensions are
    # set to be 15 cm wide and 8 cm high. Each subplot is automatically labelled.
    # The space between the subplots is set to be 0.5 cm.
    with fig.subplot(
        nrows=1, ncols=2, figsize=("15c", "8c"), autolabel=True, margins="0.5c"
    ):
        # Activate the first panel so that the colormap created by the makecpt
        # function is a panel-level CPT
        with fig.set_panel(panel=0):
            pygmt.makecpt(cmap="geo", series=[-8000, 8000])
            # "R?" means Winkel Tripel projection with map width automatically
            # determined from the subplot width.
            fig.grdimage(grid=grid_globe, projection="R?", region="g", frame="a")
            fig.colorbar(frame=["a4000f2000", "x+lElevation", "y+lm"])
        # Activate the second panel so that the colormap created by the makecpt
        # function is a panel-level CPT
        with fig.set_panel(panel=1):
            pygmt.makecpt(cmap="globe", series=[-6000, 3000])
            # "M?" means Mercator projection with map width also automatically
            # determined from the subplot width.
            fig.grdimage(grid=grid_subset, projection="M?", region=subset_region, frame="a")
            fig.colorbar(frame=["a2000f1000", "x+lElevation", "y+lm"])

    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.321 seconds)


.. _sphx_glr_download_gallery_embellishments_colorbars_multiple.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: colorbars_multiple.ipynb <colorbars_multiple.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: colorbars_multiple.py <colorbars_multiple.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: colorbars_multiple.zip <colorbars_multiple.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
