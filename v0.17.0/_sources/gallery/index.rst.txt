:orphan:

Gallery
=======

This gallery contains examples of what PyGMT can do. Click on any example to see the
code used to generate it.



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. thumbnail-parent-div-close

.. raw:: html

    </div>

Maps and map elements
---------------------



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method allows us to plot geographical data such as polygons which are stored in a geopandas.GeoDataFrame object. Use geopandas.read_file to load data from any supported OGR format such as a shapefile (.shp), GeoJSON (.geojson), geopackage (.gpkg), etc. You can also use a full URL pointing to your desired data source. Then, pass the geopandas.GeoDataFrame as an argument to the data parameter of pygmt.Figure.plot, and style the geometry using the pen parameter. To fill the polygons based on a corresponding column you need to set fill=&quot;+z&quot; as well as select the appropriate column using the aspatial parameter as shown in the example below.">

.. only:: html

  .. image:: /gallery/maps/images/thumb/sphx_glr_choropleth_map_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_maps_choropleth_map.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Choropleth map</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The land and water parameters of pygmt.Figure.coast specify a color to fill in the land and water masses, respectively. There are many color codes in GMT &lt;gmtcolors.html&gt;, including standard GMT color names (like &quot;skyblue&quot;), R/G/B levels (like &quot;0/0/255&quot;), a hex value (like &quot;#333333&quot;), and a gray level (like &quot;gray50&quot;).">

.. only:: html

  .. image:: /gallery/maps/images/thumb/sphx_glr_land_and_water_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_maps_land_and_water.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Color land and water</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Besides one of the 31 projections supported by GMT &lt;/techref/projections&gt;, users can pass an EPSG (European Petroleum Survey Group) code to the projection parameter. A commonly used EPSG code is EPSG:3857, that refers to the Web Mercator projection WGS84. More information on the EPSG dataset can be found at https://epsg.org and https://spatialreference.org/. Please note, that not all EPSG codes are supported by GMT / PyGMT.">

.. only:: html

  .. image:: /gallery/maps/images/thumb/sphx_glr_epsg_codes_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_maps_epsg_codes.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">EPSG codes</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.coast method can highlight country polygons via the dcw parameter. It accepts the country code (following the 2-letter ISO 3166-1 alpha-2 convention) or full country name and can draw its borders and add a color to its landmass. It&#x27;s also possible to define multiple countries at once by separating the individual names with commas.">

.. only:: html

  .. image:: /gallery/maps/images/thumb/sphx_glr_country_polygons_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_maps_country_polygons.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Highlight country, continent and state polygons</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The borders parameter of pygmt.Figure.coast specifies levels of political boundaries to plot and the pen used to draw them. Choose from the list of boundaries below:">

.. only:: html

  .. image:: /gallery/maps/images/thumb/sphx_glr_borders_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_maps_borders.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Political boundaries</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Use pygmt.Figure.coast to display shorelines as black lines.">

.. only:: html

  .. image:: /gallery/maps/images/thumb/sphx_glr_shorelines_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_maps_shorelines.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Shorelines</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.tilemap method allows to plot tiles from a tile server or local file as a basemap or overlay.">

.. only:: html

  .. image:: /gallery/maps/images/thumb/sphx_glr_tilemaps_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_maps_tilemaps.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Tile maps</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /gallery/maps/choropleth_map
   /gallery/maps/land_and_water
   /gallery/maps/epsg_codes
   /gallery/maps/country_polygons
   /gallery/maps/borders
   /gallery/maps/shorelines
   /gallery/maps/tilemaps

Lines and vectors
-----------------



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method can plot Cartesian, circular, and geographic vectors. The style parameter controls vector attributes. See also the Vector attributes example &lt;/gallery/lines/vector_heads_tails&gt;.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_vector_styles_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_vector_styles.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Cartesian, circular, and geographic vectors</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The connection parameter of the pygmt.Figure.plot method allows to plot connection lines between a set of data points. Width, color, and style of the lines can be adjusted via the pen parameter. The data points must be plotted separately using the style parameter, with adjustments for the symbol fill and outline via the fill and pen parameters, respectively.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_connection_lines_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_connection_lines.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Connection lines</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="To draw a so-called decorated line, i.e., symbols along a line or curve, use the style parameter of the pygmt.Figure.plot method with the argument &quot;~&quot; and the desired modifiers. A colon (``&quot;:&quot;``) is used to separate the algorithm settings from the symbol information. This example shows how to adjust the symbols. Beside the built-in symbols also custom symbols can be used. For modifying the main decorated line via the pen parameter, see the Line styles example &lt;/gallery/lines/linestyles&gt;. For details on the input data see the upstream GMT documentation at plot.html#s. Furthermore, there are so-called line fronts, which are often used to plot fault lines, subduction zones, or weather fronts; for details see the Line fronts example &lt;/gallery/lines/linefronts&gt;.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_decorated_lines_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_decorated_lines.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Decorated lines</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The close parameter of the pygmt.Figure.plot method can be used to build a symmetrical or an asymmetrical envelope. The user can give either the deviations or the bounds in y-direction. For the first case append &quot;+d&quot; or &quot;+D&quot; and for the latter case &quot;+b&quot;.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_envelope_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_envelope.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Envelope</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.project function can generate points along a great circle whose center and end points can be defined via the center and endpoint parameters, respectively. Using the generate parameter allows to generate (r, s, p) points every dist units of p along a profile as output. By default, all units (r, s and p) are set to degrees while unit=True allows to set the unit for p to km.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_great_circles_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_great_circles.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Generate points along great circles</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method allows us to plot geographical data such as lines with LineString or MultiLineString geometry types stored in a geopandas.GeoDataFrame object or any object that implements the __geo_interface__ property.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_linestrings_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_linestrings.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">GeoPandas: Plotting lines with LineString or MultiLineString geometry</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.hlines and pygmt.Figure.vlines methods allow to plot horizontal and vertical lines in Cartesian, geographic and polar coordinate systems.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_hlines_vlines_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_hlines_vlines.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Horizontal and vertical lines</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The color of the lines made by pygmt.Figure.plot can be set according to a custom CPT and assigned with the pen parameter.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_line_custom_cpt_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_line_custom_cpt.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Line colors with a custom CPT</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Using the pygmt.Figure.plot method you can draw a so-called front which allows to plot specific symbols distributed along a line or curve. Typical use cases are weather fronts, fault lines, subduction zones, and more. To draw general symbols along a line or curve, i.e., a so-called decorated line, see the Decorated lines example &lt;/gallery/lines/decorated_lines&gt;.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_linefronts_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_linefronts.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Line fronts</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Line segment caps and joints">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_line_segment_ends_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_line_segment_ends.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Line segment caps and joints</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method can plot lines in different styles. The default line style is a 0.25-point wide, black, solid line, and can be customized with the pen parameter.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_linestyles_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_linestyles.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Line styles</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="To plot a so-called quoted line, i.e., labels along a line or curve, use the style parameter of the pygmt.Figure.plot method with the argument &quot;q&quot; and the desired modifiers. A colon (``&quot;:&quot;``) is used to separate the algorithm settings from the label information. This example shows how to adjust the labels. For modifying the main quoted line via the pen parameter, see the Line styles example &lt;/gallery/lines/linestyles&gt;. For details on the input data see the upstream GMT documentation at plot.html#s.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_quoted_lines_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_quoted_lines.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Quoted lines</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Many methods in PyGMT allow plotting vectors with individual heads and tails. For this purpose, several modifiers may be appended to the corresponding vector-producing parameters for specifying the placement of vector heads and tails, their shapes, and the justification of the vector.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_vector_heads_tails_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_vector_heads_tails.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Vector heads and tails</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.wiggle method can plot z = f(x,y) anomalies along tracks. x, y, z can be specified as 1-D arrays or within a specified file. The scale parameter can be used to set the scale of the anomaly in data/distance units. The positive and/or negative areas can be filled with color by setting the fillpositive and/or fillnegative parameters.">

.. only:: html

  .. image:: /gallery/lines/images/thumb/sphx_glr_wiggle_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_lines_wiggle.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Wiggle along tracks</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /gallery/lines/vector_styles
   /gallery/lines/connection_lines
   /gallery/lines/decorated_lines
   /gallery/lines/envelope
   /gallery/lines/great_circles
   /gallery/lines/linestrings
   /gallery/lines/hlines_vlines
   /gallery/lines/line_custom_cpt
   /gallery/lines/linefronts
   /gallery/lines/line_segment_ends
   /gallery/lines/linestyles
   /gallery/lines/quoted_lines
   /gallery/lines/vector_heads_tails
   /gallery/lines/wiggle

Symbols and markers
-------------------



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method can plot individual geometric symbols by passing the corresponding shortcuts to the style parameter. The 14 basic geometric symbols are shown underneath their corresponding shortcut codes. Four symbols (-, +, x and y) are line-symbols only for which we can adjust the linewidth via the pen parameter. The point symbol (p) only takes a color fill which we can define via the fill parameter. For the remaining symbols we may define a linewidth as well as a color fill.">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_basic_symbols_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_basic_symbols.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Basic geometric symbols</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In addition to colors, PyGMT also allows using bit and hachure patterns to fill symbols, polygons, and other areas, via the fill parameter or similar parameters.">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_patterns_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_patterns.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Bit and hachure patterns</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method can be used to plot symbols which are color-coded by categories. In the example below, we show how the Palmer Penguins dataset can be visualized. Here, we can pass the individual categories included in the &quot;species&quot; column directly to the fill parameter via fill=df.species.cat.codes.astype(int). Additionally, we have to set cmap=True. A desired colormap can be selected via the pygmt.makecpt function.">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_points_categorical_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_points_categorical.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Color points by categories</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method can plot individual custom symbols by passing the corresponding symbol name together with the k shortcut to the style parameter.">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_custom_symbols_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_custom_symbols.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Custom symbols</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Datetime inputs of the following types are supported in PyGMT:">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_datetime_inputs_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_datetime_inputs.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Datetime inputs</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method can plot individual multi-parameter symbols by passing the corresponding shortcuts (e, j, r, R, w) to the style parameter:">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_multi_parameter_symbols_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_multi_parameter_symbols.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Multi-parameter symbols</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method can plot data points. The symbol and size are set with the style parameter.">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_points_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_points.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Points</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Points can be plotted with different transparency levels by passing in an array argument to the transparency parameter of pygmt.Figure.plot.">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_points_transparency_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_points_transparency.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Points with varying transparency</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="To create a scatter plot with a legend one may use a loop and create one scatter plot per item to appear in the legend and set the label accordingly.">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_scatter_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_scatter.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Scatter plots with a legend</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method allows to plot text symbols. Text is normally placed with the pygmt.Figure.text method but there are times we wish to treat a character or even a string as a plottable symbol. A text symbol can be drawn by passing l\ size\ +t\ string to the style parameter where size defines the size of the text symbol (note: the size is only approximate; no individual scaling is done for different characters) and string can be a letter or a text string (less than 256 characters). Optionally, you can append +f\ font,outlinecolor to select a particular font [Default is FONT_ANNOT_PRIMARY] and outline color [Default is black] as well as +j\ justify to change the justification [Default is CM]. For all supported fonts see /techref/fonts. The fill color of the text symbols can be set with the fill parameter, and the outline width can be customized with the pen parameter.">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_text_symbols_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_text_symbols.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Text symbols</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot method can plot vertical (b) or horizontal (B) bars by passing the corresponding shortcut to the style parameter. By default, base = 0 meaning that the bar is starting from 0. Append +b\[base] to change this value. To plot multi-band bars, please append +v\|\ i\ ny (for verticals bars) or +v\|\ i\ nx (for horizontal ones), where ny or nx indicate the total number of bands in the bar (and hence the number of values required to follow the x,y coordinate pair in the input). Here, +i means we must accumulate the bar values from the increments dy or dx, while +v means we get the complete values relative to base. Normally, the bands are plotted as sections of a final single bar. Use +s to instead split the bar into ny or nx side-by-side, individual and thinner bars. Multi-band bars require cmap=True with one color per band.">

.. only:: html

  .. image:: /gallery/symbols/images/thumb/sphx_glr_bars_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_symbols_bars.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Vertical or horizontal bars</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /gallery/symbols/basic_symbols
   /gallery/symbols/patterns
   /gallery/symbols/points_categorical
   /gallery/symbols/custom_symbols
   /gallery/symbols/datetime_inputs
   /gallery/symbols/multi_parameter_symbols
   /gallery/symbols/points
   /gallery/symbols/points_transparency
   /gallery/symbols/scatter
   /gallery/symbols/text_symbols
   /gallery/symbols/bars

Images, contours, and fields
----------------------------



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.grdgradient function calculates the gradient of a grid file. In the example shown below we will see how to calculate a hillshade map based on a Data Elevation Model (DEM). As input pygmt.grdgradient gets an xarray.DataArray object or a path string to a grid file, calculates the respective gradient and returns it as an xarray.DataArray object. We will use the radiance parameter in order to set the illumination source direction and altitude.">

.. only:: html

  .. image:: /gallery/images/images/thumb/sphx_glr_grdgradient_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_images_grdgradient.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Calculating grid gradient and radiance</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.grdgradient function calculates the gradient of a grid file. As input, pygmt.grdgradient gets an xarray.DataArray object or a path string to a grid file. It then calculates the respective gradient and returns an xarray.DataArray object. The example below sets two main parameters:">

.. only:: html

  .. image:: /gallery/images/images/thumb/sphx_glr_grdgradient_shading_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_images_grdgradient_shading.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Calculating grid gradient with custom azimuth and normalize parameters</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.grdclip function allows to clip defined ranges of grid values. In the example shown below we set all elevation values (grid points) smaller than 0 m (in general the bathymetric part of the grid) to a common value of -2000 m via the below parameter.">

.. only:: html

  .. image:: /gallery/images/images/thumb/sphx_glr_grdclip_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_images_grdclip.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Clipping grid values</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.contour method can plot contour lines from a table of points by direct triangulation. The data for the triangulation can be provided using one of three methods:">

.. only:: html

  .. image:: /gallery/images/images/thumb/sphx_glr_contours_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_images_contours.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Contours</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.grdlandmask function allows setting all nodes on land or water to a specified value using the maskvalues parameter.">

.. only:: html

  .. image:: /gallery/images/images/thumb/sphx_glr_grdlandmask_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_images_grdlandmask.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Create 'wet-dry' mask grid</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="pygmt.project and pygmt.grdtrack can be used to focus on a quantity and its variation along a desired survey line. In this example, the elevation is extracted from a grid provided via pygmt.datasets.load_earth_relief. The figure consists of two parts, a map of the elevation in the study area showing the survey line and a Cartesian plot showing the elevation along the survey line.">

.. only:: html

  .. image:: /gallery/images/images/thumb/sphx_glr_cross_section_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_images_cross_section.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Cross-section along a transect</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.image method can be used to read and place an image file in many formats (e.g., png, jpg, eps, pdf) on a figure. We must specify the filename via the imagefile parameter or simply use the filename as the first argument. You can also use a full URL pointing to your desired image. The position parameter allows us to set a reference point on the map for the image.">

.. only:: html

  .. image:: /gallery/images/images/thumb/sphx_glr_image_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_images_image.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Image on a figure</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.grdimage method can be used to plot Red, Green, Blue (RGB) images, or any 3-band false color combination. Here, we&#x27;ll use :pyrioxarray.open_rasterio to read a GeoTIFF file into an xarray.DataArray format, and plot it on a map.">

.. only:: html

  .. image:: /gallery/images/images/thumb/sphx_glr_rgb_image_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_images_rgb_image.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">RGB image</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.grdtrack function samples a raster grid&#x27;s value along specified points. We will need to input a 2-D raster to grid which can be an xarray.DataArray. The argument passed to the points parameter can be a pandas.DataFrame table where the first two columns are x and y (or longitude and latitude). Note also that there is a newcolname parameter that will be used to name the new column of values sampled from the grid.">

.. only:: html

  .. image:: /gallery/images/images/thumb/sphx_glr_track_sampling_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_images_track_sampling.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Sampling along tracks</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /gallery/images/grdgradient
   /gallery/images/grdgradient_shading
   /gallery/images/grdclip
   /gallery/images/contours
   /gallery/images/grdlandmask
   /gallery/images/cross_section
   /gallery/images/image
   /gallery/images/rgb_image
   /gallery/images/track_sampling

3D Plots
--------



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.plot3d method can be used to plot symbols in 3-D. In the example below, we show how the Iris flower dataset can be visualized using a perspective 3-D plot. The region parameter has to include the x, y, z axis limits in the form of (xmin, xmax, ymin, ymax, zmin, zmax), which can be done automatically using pygmt.info. To plot the z-axis frame, set frame as a minimum to something like frame=[&quot;WsNeZ&quot;, &quot;zaf&quot;]. Use perspective to control the azimuth and elevation angle of the view, and zscale to adjust the vertical exaggeration factor.">

.. only:: html

  .. image:: /gallery/3d_plots/images/thumb/sphx_glr_scatter3d_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_3d_plots_scatter3d.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">3-D scatter plots</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.grdview() method can plot 3-D surfaces with surftype=&quot;s&quot;. Here, we supply the data as an xarray.DataArray with the coordinate vectors x and y defined. Note that the perspective parameter here controls the azimuth and elevation angle of the view. We provide a list of two arguments to frame - the first argument specifies the x- and y-axes frame attributes and the second argument, prepended with &quot;z&quot;, specifies the z-axis frame attributes. Specifying the same scale for the projection and zscale parameters ensures equal axis scaling. The shading parameter specifies illumination; here we choose an azimuth of 45° with shading=&quot;+a45&quot;.">

.. only:: html

  .. image:: /gallery/3d_plots/images/thumb/sphx_glr_grdview_surface_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_3d_plots_grdview_surface.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Plotting a surface</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /gallery/3d_plots/scatter3d
   /gallery/3d_plots/grdview_surface

Seismology and geodesy
----------------------



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.meca method can plot focal mechanisms or beachballs. We can specify the focal mechanism nodal planes or moment tensor components as a dictionary using the spec parameter (or they can be specified as a 1-D or 2-D array, or within a file). The size of the beachballs can be set using the scale parameter. The compressive and extensive quadrants can be filled either with a color or a pattern via the compressionfill and extensionfill parameters, respectively. Use the pen parameter to adjust the outline of the beachballs.">

.. only:: html

  .. image:: /gallery/seismology/images/thumb/sphx_glr_meca_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_seismology_meca.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Focal mechanisms</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.velo method can be used to plot mean velocity arrows and confidence ellipses. The example below plots red velocity arrows with lightblue confidence ellipses outlined in red with the east_velocity x north_velocity used for the station names. Note that the velocity arrows are scaled by 0.2 and the 39% confidence limit will give an ellipse which fits inside a rectangle of dimension east_sigma by north_sigma.">

.. only:: html

  .. image:: /gallery/seismology/images/thumb/sphx_glr_velo_arrow_ellipse_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_seismology_velo_arrow_ellipse.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Velocity arrows and confidence ellipses</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /gallery/seismology/meca
   /gallery/seismology/velo_arrow_ellipse

Base maps
---------



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The frame parameter of the plotting methods of the pygmt.Figure class can control which axes should be plotted and optionally show annotations, tick marks, and gridlines. By default, all 4 axes are plotted, along with annotations and tick marks (denoted W, S, E, N). Lowercase versions (w, s, e, n) can be used to denote to only plot the axes with tick marks. We can also only plot the axes without annotations and tick marks using l (left axis), r (right axis), t (top axis), b (bottom axis). When frame is used to change the frame settings, any axes that are not defined using one of these three options are not drawn.">

.. only:: html

  .. image:: /gallery/basemaps/images/thumb/sphx_glr_double_y_axes_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_basemaps_double_y_axes.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Double Y-axes graph</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.ternary method can draw ternary diagrams. The example shows how to plot circles with a diameter of 0.1 centimeters (``style=&quot;c0.1c&quot;``) on a 10-centimeters-wide (``width=&quot;10c&quot;``) ternary diagram at the positions listed in the first three columns of the sample dataset rock_compositions, with default annotations and gridline spacings, using the specified labeling defined via alabel, blabel, and clabel. Points are colored based on the values given in the fourth columns of the sample dataset via cmap=True.">

.. only:: html

  .. image:: /gallery/basemaps/images/thumb/sphx_glr_ternary_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_basemaps_ternary.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Ternary diagram</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /gallery/basemaps/double_y_axes
   /gallery/basemaps/ternary

Histograms
----------



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.blockmean function calculates different quantities inside blocks/bins whose dimensions are defined via the spacing parameter. The following examples show how to calculate the averages of the given values inside each bin and how to report the number of points inside each bin.">

.. only:: html

  .. image:: /gallery/histograms/images/thumb/sphx_glr_blockm_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_histograms_blockm.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Blockmean</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.histogram method can plot regular histograms. Using the series parameter allows to set the interval for the width of each bar. The type of the histogram (frequency count or percentage) can be selected via the histtype parameter.">

.. only:: html

  .. image:: /gallery/histograms/images/thumb/sphx_glr_histogram_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_histograms_histogram.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Histogram</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.rose method can plot windrose diagrams or polar histograms.">

.. only:: html

  .. image:: /gallery/histograms/images/thumb/sphx_glr_rose_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_histograms_rose.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Rose diagram</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="To create a scatter plot with histograms at the sides of the plot one can use pygmt.Figure.plot in combination with pygmt.Figure.histogram. The positions of the histograms are plotted by offsetting them from the main scatter plot using pygmt.Figure.shift_origin.">

.. only:: html

  .. image:: /gallery/histograms/images/thumb/sphx_glr_scatter_and_histograms_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_histograms_scatter_and_histograms.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Scatter plot with histograms</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /gallery/histograms/blockm
   /gallery/histograms/histogram
   /gallery/histograms/rose
   /gallery/histograms/scatter_and_histograms

Plot embellishments
-------------------



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.colorbar method creates a color scalebar. The colormap is set via the cmap parameter. A full list of available color palette tables can be found at reference/cpts.html. Use the frame parameter to add labels to the x and y axes of the colorbar by appending +l followed by the desired text. To add and adjust the annotations (a) and ticks (f) append the letter followed by the desired interval. The placement of the colorbar is set via the position parameter. There are the following options:">

.. only:: html

  .. image:: /gallery/embellishments/images/thumb/sphx_glr_colorbar_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_embellishments_colorbar.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Colorbar</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Use pygmt.Figure.solar to show the different transition stages between daytime and nighttime. The parameter terminator is used to set the twilight stage, and can be either &quot;day_night&quot; (brightest), &quot;civil&quot;, &quot;nautical&quot;, or &quot;astronomical&quot; (darkest). Refer to https://en.wikipedia.org/wiki/Twilight for more information.">

.. only:: html

  .. image:: /gallery/embellishments/images/thumb/sphx_glr_solar_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_embellishments_solar.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Day-night terminator and twilights</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.logo method allows to place the GMT logo on a figure.">

.. only:: html

  .. image:: /gallery/embellishments/images/thumb/sphx_glr_gmt_logo_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_embellishments_gmt_logo.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">GMT logo</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.inset method adds an inset figure inside a larger figure. The method is called using a with statement, and its position, box, offset, and margin parameters are set. Plotting methods called within the with statement are applied to the inset figure.">

.. only:: html

  .. image:: /gallery/embellishments/images/thumb/sphx_glr_inset_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_embellishments_inset.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Inset</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.inset method adds an inset figure inside a larger figure. The method is called using a with statement, and its position, box, offset, and margin can be customized. Plotting methods called within the with statement plot into the inset figure.">

.. only:: html

  .. image:: /gallery/embellishments/images/thumb/sphx_glr_inset_rectangle_region_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_embellishments_inset_rectangle_region.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Inset map showing a rectangular region</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.legend method can automatically create a legend for symbols plotted using pygmt.Figure.plot. A legend entry is only added when the label parameter is used to state the desired text. Optionally, to adjust the legend, users can append different modifiers. A list of all available modifiers can be found at gmt.html#l-full. To create a multiple-column legend +N is used with the desired number of columns. For more complicated legends, users may want to write an ASCII file with instructions for the layout of the legend items and pass it to the spec parameter of pygmt.Figure.legend. For details on how to set up such a file, please see the GMT documentation at legend.html#legend-codes.">

.. only:: html

  .. image:: /gallery/embellishments/images/thumb/sphx_glr_legend_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_embellishments_legend.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Legend</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This gallery example shows how to create multiple colormaps for different subplots. To better understand how GMT modern mode maintains several levels of colormaps, please refer to reference/features.html#gmt-modern-mode-hierarchical-levels for details.">

.. only:: html

  .. image:: /gallery/embellishments/images/thumb/sphx_glr_colorbars_multiple_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_embellishments_colorbars_multiple.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Multiple colormaps</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The map_scale parameter of the pygmt.Figure.basemap and pygmt.Figure.coast methods is used to add a scale bar to a map. This example shows how such a scale bar can be customized:">

.. only:: html

  .. image:: /gallery/embellishments/images/thumb/sphx_glr_scalebar_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_embellishments_scalebar.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Scale bar</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="There are various options for formatting text contained in a plot, e.g., text added via pygmt.Figure.text, the plot title, labels of colorbars as well as Cartesian axes, and legend entries. It&#x27;s also possible to change the font as well as its color and size only for specific characters of a longer text. The supported fonts are listed at Supported Fonts &lt;/techref/fonts&gt;. For an complete overview see Text Formatting &lt;/techref/text_formatting&gt;.">

.. only:: html

  .. image:: /gallery/embellishments/images/thumb/sphx_glr_text_formatting_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_embellishments_text_formatting.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Text formatting</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The pygmt.Figure.timestamp method can draw the GMT timestamp logo on the plot. The timestamp will always be shown relative to the Bottom Left (BL) corner of the plot. By default, the offset and justify parameters are set to (&quot;-54p&quot;, &quot;-54p&quot;) (x-, y-directions) and &quot;BL&quot; (Bottom Left), respectively.">

.. only:: html

  .. image:: /gallery/embellishments/images/thumb/sphx_glr_timestamp_thumb.png
    :alt:

  :ref:`sphx_glr_gallery_embellishments_timestamp.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Timestamp</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /gallery/embellishments/colorbar
   /gallery/embellishments/solar
   /gallery/embellishments/gmt_logo
   /gallery/embellishments/inset
   /gallery/embellishments/inset_rectangle_region
   /gallery/embellishments/legend
   /gallery/embellishments/colorbars_multiple
   /gallery/embellishments/scalebar
   /gallery/embellishments/text_formatting
   /gallery/embellishments/timestamp



.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
